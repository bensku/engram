import * as dotenv from 'dotenv';
dotenv.config({
  path: '../.env',
});

// Register the supported tools, engines, etc. BEFORE loading rest of the application
import './tool/tools/index';

import Koa from 'koa';
import Router from '@koa/router';
import { RegisterRoutes } from '../generated/routes';
import koaBody from 'koa-body';
import { runMigrations } from './db/core';
import { AUTH_ENABLED, initializeOidcAuth } from './auth';

void (async () => {
  await runMigrations();

  const app = new Koa();

  const router = new Router({
    prefix: '/api',
  });
  if (AUTH_ENABLED) {
    // If this is not development environment, initialize authentication
    const appSecret = process.env.APP_SECRET;
    const appUrl = process.env.APP_URL;
    const idpUrl = process.env.OIDC_IDP_URL;
    const clientId = process.env.OIDC_CLIENT_ID;
    const clientSecret = process.env.OIDC_CLIENT_SECRET;
    if (!appSecret || !appUrl || !idpUrl || !clientId || !clientSecret) {
      throw new Error('missing OIDC configuration');
    }
    app.keys = [appSecret];
    await initializeOidcAuth(
      app,
      router,
      appUrl,
      idpUrl,
      clientId,
      clientSecret,
    );
  }
  RegisterRoutes(router); // RegisterRoutes generated by tsoa

  app.use(koaBody());
  app.use(router.routes());
  app.use(router.allowedMethods());
  app.listen(3001);
})();
